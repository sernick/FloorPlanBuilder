<UserControl x:Class="FloorPlanBuilder.Views.OriginControl"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:classes="clr-namespace:FloorPlanBuilder.Classes"
			 xmlns:enums="clr-namespace:FloorPlanBuilder.Enums"
			 xmlns:system="clr-namespace:System;assembly=mscorlib"
			 xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
			 xmlns:gong="urn:gong-wpf-dragdrop"
			 mc:Ignorable="d"
			 d:DataContext="{d:DesignInstance classes:Origin}">

	<UserControl.Resources>
		<Style x:Key="VertexNameTextBlock"
			   TargetType="{x:Type TextBlock}"
			   BasedOn="{StaticResource MetroTextBlock}">
			<Style.Triggers>
				<DataTrigger Binding="{Binding Path=(classes:Spot.Type)}"
							 Value="{x:Static enums:SpotType.Vertex}">
					<Setter Property="FontWeight"
							Value="ExtraBold" />
					<Setter Property="TextDecorations"
							Value="Underline" />
				</DataTrigger>

				<DataTrigger Binding="{Binding Path=(classes:Spot.Type)}"
							 Value="{x:Static enums:SpotType.CalculatedVertex}">
					<Setter Property="FontWeight"
							Value="ExtraBold" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
	</UserControl.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<StackPanel Margin="10">
			<Grid HorizontalAlignment="Left">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="20" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="7" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="20" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="7" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="20" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="7" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="10" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0"
						   Grid.Column="0"
						   Text="Двугранный угол:"
						   VerticalAlignment="Center"
						   HorizontalAlignment="Right" />

				<StackPanel Grid.Row="0"
							Grid.Column="2"
							Orientation="Horizontal"
							VerticalAlignment="Center">
					<TextBlock Text="уклономер " />

					<TextBlock Text="ProDigit"
							   FontWeight="Bold" />
				</StackPanel>

				<controls:NumericUpDown Grid.Row="0"
										Grid.Column="4"
										Value="{Binding Path=ProDigitDihedralDegree}"
										Minimum="0"
										Interval="0.05"
										TextAlignment="Left"
										MinWidth="100"
										MouseDoubleClick="NumericUpDown_SelectAll"
										GotKeyboardFocus="NumericUpDown_SelectAll"
										PreviewMouseLeftButtonDown="NumericUpDown_PreviewMouseLeftButtonDown" />

				<StackPanel Grid.Row="0"
							Grid.Column="6"
							Orientation="Horizontal"
							VerticalAlignment="Center">
					<TextBlock Text="угломер " />

					<TextBlock Text="AngleRuler"
							   FontWeight="Bold" />
				</StackPanel>

				<controls:NumericUpDown Grid.Row="0"
										Grid.Column="8"
										Value="{Binding Path=AngleRulerDihedralDegree}"
										Minimum="0"
										Interval="0.1"
										TextAlignment="Left"
										MinWidth="100"
										MouseDoubleClick="NumericUpDown_SelectAll"
										GotKeyboardFocus="NumericUpDown_SelectAll"
										PreviewMouseLeftButtonDown="NumericUpDown_PreviewMouseLeftButtonDown" />

				<TextBlock Grid.Row="2"
						   Grid.Column="0"
						   Text="Высота потолка:"
						   VerticalAlignment="Center"
						   HorizontalAlignment="Right" />

				<StackPanel Grid.Row="2"
							Grid.Column="2"
							Orientation="Horizontal"
							VerticalAlignment="Center"
							HorizontalAlignment="Right">
					<TextBlock Text="Zamo"
							   FontWeight="Bold" />

					<TextBlock Text=" вниз" />
				</StackPanel>

				<controls:NumericUpDown Grid.Row="2"
										Grid.Column="4"
										Value="{Binding Path=ZamoDistanceDown}"
										Minimum="0"
										Interval="1"
										TextAlignment="Left"
										MinWidth="100"
										MouseDoubleClick="NumericUpDown_SelectAll"
										GotKeyboardFocus="NumericUpDown_SelectAll"
										PreviewMouseLeftButtonDown="NumericUpDown_PreviewMouseLeftButtonDown" />

				<StackPanel Grid.Row="2"
							Grid.Column="6"
							Orientation="Horizontal"
							VerticalAlignment="Center"
							HorizontalAlignment="Right">
					<TextBlock Text="Zamo"
							   FontWeight="Bold" />

					<TextBlock Text=" вверх" />
				</StackPanel>

				<controls:NumericUpDown Grid.Row="2"
										Grid.Column="8"
										Value="{Binding Path=ZamoDistanceUp}"
										Minimum="0"
										Interval="1"
										TextAlignment="Left"
										MinWidth="100"
										MouseDoubleClick="NumericUpDown_SelectAll"
										GotKeyboardFocus="NumericUpDown_SelectAll"
										PreviewMouseLeftButtonDown="NumericUpDown_PreviewMouseLeftButtonDown" />

				<TextBlock Grid.Row="2"
						   Grid.Column="10"
						   Text="расчетное значение"
						   VerticalAlignment="Center"
						   HorizontalAlignment="Right" />

				<TextBox Grid.Row="2"
						 Grid.Column="12"
						 Text="{Binding Path=CeilingHeight, Mode=OneWay}"
						 IsReadOnly="True"
						 MinWidth="100" />
			</Grid>

			<CheckBox DockPanel.Dock="Right"
					  Content="Замкнуть контур"
					  IsChecked="{Binding Path=IsClosed}"
					  Margin="0,10,0,0"
					  HorizontalAlignment="Left" />
		</StackPanel>

		<GridSplitter Grid.Row="1"
					  Height="5"
					  HorizontalAlignment="Stretch"
					  VerticalAlignment="Stretch"
					  IsEnabled="False" />

		<Grid Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>

			<DockPanel Grid.Column="0">
				<DockPanel DockPanel.Dock="Top">
					<Label Foreground="{StaticResource AccentColorBrush}"
						   FontSize="13"
						   Content="Замеры" />
				</DockPanel>

				<DataGrid ItemsSource="{Binding Path=Measures}"
						  AutoGenerateColumns="False"
						  GridLinesVisibility="Horizontal"
						  CanUserSortColumns="False"
						  SelectionUnit="CellOrRowHeader"
						  HeadersVisibility="All"
						  RowHeaderWidth="10"
						  gong:DragDrop.IsDragSource="True"
						  gong:DragDrop.IsDropTarget="True"
						  gong:DragDrop.DropHandler="{Binding Source={x:Static classes:MeasureDropTarget.Instance}}">
					<DataGrid.Resources>
						<Style x:Key="MeasurementTypeTextBlock"
							   TargetType="{x:Type TextBlock}"
							   BasedOn="{StaticResource MetroTextBlock}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding}"
											 Value="{x:Static enums:MeasureType.Vertex}">
									<Setter Property="Text"
											Value="Вершина" />
									<Setter Property="FontWeight"
											Value="Bold" />
									<Setter Property="TextDecorations"
											Value="Underline" />
								</DataTrigger>
								<DataTrigger Binding="{Binding}"
											 Value="{x:Static enums:MeasureType.BeforeVertex}">
									<Setter Property="Text"
											Value="До вершины" />
									<Setter Property="FontWeight"
											Value="Bold" />
								</DataTrigger>
								<DataTrigger Binding="{Binding}"
											 Value="{x:Static enums:MeasureType.ForCalculation}">
									<Setter Property="Text"
											Value="Расчётная" />
									<Setter Property="FontWeight"
											Value="Bold" />
								</DataTrigger>
								<DataTrigger Binding="{Binding}"
											 Value="{x:Static enums:MeasureType.Beacon}">
									<Setter Property="Text"
											Value="Маячковая" />
								</DataTrigger>
							</Style.Triggers>
						</Style>

						<ObjectDataProvider x:Key="MeasurementTypeValues"
											MethodName="GetValues"
											ObjectType="{x:Type system:Enum}">
							<ObjectDataProvider.MethodParameters>
								<x:Type TypeName="enums:MeasureType" />
							</ObjectDataProvider.MethodParameters>
						</ObjectDataProvider>
					</DataGrid.Resources>

					<DataGrid.RowStyle>
						<Style TargetType="{x:Type DataGridRow}"
							   BasedOn="{StaticResource MetroDataGridRow}">
							<Setter Property="IsSelected"
									Value="{Binding Path=(classes:Measure.IsSelected)}" />
						</Style>
					</DataGrid.RowStyle>

					<DataGrid.Columns>
						<DataGridTemplateColumn Header="Тип точки"
												MinWidth="100">
							<DataGridTemplateColumn.CellTemplate>
								<DataTemplate DataType="{x:Type classes:Measure}">
									<TextBlock Padding="2,0"
											   DataContext="{Binding Path=(classes:Measure.Type)}"
											   Style="{StaticResource MeasurementTypeTextBlock}" />
								</DataTemplate>
							</DataGridTemplateColumn.CellTemplate>

							<DataGridTemplateColumn.CellEditingTemplate>
								<DataTemplate DataType="{x:Type classes:Measure}">
									<ComboBox ItemsSource="{Binding Source={StaticResource MeasurementTypeValues}}"
											  SelectedItem="{Binding Path=Type}">
										<ComboBox.ItemTemplate>
											<DataTemplate DataType="{x:Type enums:MeasureType}">
												<TextBlock Style="{StaticResource MeasurementTypeTextBlock}" />
											</DataTemplate>
										</ComboBox.ItemTemplate>
									</ComboBox>
								</DataTemplate>
							</DataGridTemplateColumn.CellEditingTemplate>
						</DataGridTemplateColumn>

						<DataGridTextColumn Header="Расстояние"
											Binding="{Binding Path=Distance}"
											MinWidth="80" />

						<DataGridTextColumn Header="Угол"
											Binding="{Binding Path=Degree}"
											MinWidth="80" />
					</DataGrid.Columns>
				</DataGrid>
			</DockPanel>

			<GridSplitter Grid.Column="1"
						  Width="5"
						  HorizontalAlignment="Stretch"
						  VerticalAlignment="Stretch" />

			<DockPanel Grid.Column="2">
				<DockPanel DockPanel.Dock="Top">
					<Label Foreground="{StaticResource AccentColorBrush}"
						   FontSize="13"
						   Content="Точки" />
				</DockPanel>

				<DataGrid ItemsSource="{Binding Path=Spots}"
						  AutoGenerateColumns="False"
						  GridLinesVisibility="Horizontal"
						  IsReadOnly="True"
						  CanUserSortColumns="False">
					<DataGrid.Resources>
						<Style x:Key="VertexTypeTextBlock"
							   TargetType="{x:Type TextBlock}"
							   BasedOn="{StaticResource MetroTextBlock}">
							<Style.Triggers>
								<DataTrigger Binding="{Binding}"
											 Value="{x:Static enums:SpotType.Vertex}">
									<Setter Property="Text"
											Value="Вершина" />
									<Setter Property="FontWeight"
											Value="Bold" />
									<Setter Property="TextDecorations"
											Value="Underline" />
								</DataTrigger>

								<DataTrigger Binding="{Binding}"
											 Value="{x:Static enums:SpotType.CalculatedVertex}">
									<Setter Property="Text"
											Value="Вершина рассчитанная" />
									<Setter Property="FontWeight"
											Value="Bold" />
								</DataTrigger>

								<DataTrigger Binding="{Binding}"
											 Value="{x:Static enums:SpotType.Beacon}">
									<Setter Property="Text"
											Value="Маячковая" />
								</DataTrigger>
							</Style.Triggers>
						</Style>

						<DataTemplate x:Key="VertexTypeTemplate"
									  DataType="{x:Type classes:Spot}">
							<TextBlock Padding="2,0"
									   DataContext="{Binding Path=(classes:Spot.Type)}"
									   Style="{StaticResource VertexTypeTextBlock}" />
						</DataTemplate>
					</DataGrid.Resources>

					<DataGrid.Columns>
						<DataGridTextColumn Header="Имя"
											MinWidth="100"
											Binding="{Binding Path=Name}"
											ElementStyle="{StaticResource VertexNameTextBlock}" />

						<DataGridTextColumn Header="Paccтояние"
											MinWidth="100"
											Binding="{Binding Path=MeasuredDistance, StringFormat={}{0:0}}" />

						<DataGridTextColumn Header="Угол"
											MinWidth="100"
											Binding="{Binding Path=Degree, StringFormat={}{0:0.#}}" />

						<DataGridTemplateColumn Header="Тип"
												MinWidth="100"
												IsReadOnly="True"
												CellTemplate="{StaticResource VertexTypeTemplate}" />
					</DataGrid.Columns>
				</DataGrid>
			</DockPanel>

		</Grid>

		<GridSplitter Grid.Row="3"
					  Height="5"
					  HorizontalAlignment="Stretch"
					  VerticalAlignment="Stretch"
					  IsEnabled="True" />

		<DockPanel Grid.Row="4">
			<DockPanel.Resources>
				<DataTemplate DataType="{x:Type classes:Spot}">
					<TextBlock Text="{Binding Path=Name}"
							   Style="{StaticResource VertexNameTextBlock}" />
				</DataTemplate>
			</DockPanel.Resources>

			<StackPanel Margin="10"
						Orientation="Horizontal"
						HorizontalAlignment="Left"
						VerticalAlignment="Top">
				<StackPanel Orientation="Horizontal"
							VerticalAlignment="Center">
					<TextBlock Text="Дополнить контур"
							   Margin="0,0,5,0"
							   VerticalAlignment="Center" />

					<ComboBox ItemsSource="{Binding Path=NotThisOrigins}"
							  SelectedItem="{Binding Path=Receiver}"
							  VerticalAlignment="Center">
						<ComboBox.ItemTemplate>
							<DataTemplate DataType="{x:Type classes:Origin}">
								<TextBlock Text="{Binding Path=Name}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>

					<Grid Margin="10,0,0,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="10" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<RadioButton Grid.Row="0"
									 Grid.Column="0"
									 Margin="0,0,0,5"
									 Content="обособленно"
									 IsChecked="{Binding Path=InsertDirection, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static enums:InsertDirection.Separately}}" />

						<StackPanel Grid.Row="1"
									Grid.Column="0">
							<RadioButton Content="до вершины"
										 IsChecked="{Binding Path=InsertDirection, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static enums:InsertDirection.Before}}" />
							<RadioButton Content="после вершины"
										 IsChecked="{Binding Path=InsertDirection, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static enums:InsertDirection.After}}"
										 Margin="0,5,0,0" />
						</StackPanel>

						<ComboBox Grid.Row="1"
								  Grid.Column="2"
								  ItemsSource="{Binding Path=Receiver.BasicSpots}"
								  SelectedItem="{Binding Path=ReceiverInsertSpot}"
								  VerticalAlignment="Center" />
					</Grid>
				</StackPanel>

				<Grid Margin="30,0,0,0"
					  VerticalAlignment="Center">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="5" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="5" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>

					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="5" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>

					<TextBlock Grid.Row="0"
							   Grid.Column="0"
							   Text="Реперная точка 1"
							   VerticalAlignment="Center" />

					<ComboBox Grid.Row="0"
							  Grid.Column="2"
							  ItemsSource="{Binding Path=Receiver.NotCalculatedSpots}"
							  SelectedItem="{Binding Path=ReceiverOverlapSpot1}" />

					<ComboBox Grid.Row="0"
							  Grid.Column="4"
							  ItemsSource="{Binding Path=NotCalculatedSpots}"
							  SelectedItem="{Binding Path=OverlapSpot1}" />

					<TextBlock Grid.Row="2"
							   Grid.Column="0"
							   Text="Реперная точка 2"
							   VerticalAlignment="Center" />

					<ComboBox Grid.Row="2"
							  Grid.Column="2"
							  ItemsSource="{Binding Path=Receiver.NotCalculatedSpots}"
							  SelectedItem="{Binding Path=ReceiverOverlapSpot2}" />

					<ComboBox Grid.Row="2"
							  Grid.Column="4"
							  ItemsSource="{Binding Path=NotCalculatedSpots}"
							  SelectedItem="{Binding Path=OverlapSpot2}" />
				</Grid>
			</StackPanel>
		</DockPanel>
	</Grid>
</UserControl>